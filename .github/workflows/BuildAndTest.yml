name: Build & Testing distribute

on:
  push:
    branches:
      - main

env:
  APPCENTER_DISTRIBUTION_GROUP: 'Testers'

jobs:
  Build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '17'

      - uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install & npm install -g appcenter-cli

      - name: ncc build
        run: |
          npx @vercel/ncc build src/main.ts

  Test:
    runs-on: ${{ matrix.os }}
    needs: Build
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, Windows-latest ]
        target: [ 'iOS', 'Android' ]

    steps:
      - uses: ./
        with:
          token: ${{ secrets.APPCENTER_ACCESS_TOKEN }}
          build-number: ${{ github.run_number }}
          path: ${{ github.workspace }}/artifacts/Build.${{ fromJSON('["ipa", "apk"]')[matrix.target == 'Android'] }}
          app: akiojin/Unity-2021.3.1f1-${{ matrix.target }}-${{ github.ref_name }}
          mandatory: true
          silent: false
          group: ${{ env.APPCENTER_DISTRIBUTION_GROUP }}
          release_notes: |
            "# GitHub Actions
            - Action : ${{ github.event_name }}
            - Requester : ${{ github.actor }}
            - Build Number : ${{ github.run_number }}
            - Commit Message : ${{ github.event.head_commit.message }}"
